{"version":3,"sources":["ImageForm.js","ImageList.js","App.js","reportWebVitals.js","index.js"],"names":["ImageForm","props","state","description","url","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","addImage","onSubmit","type","onChange","placeholder","Component","ImageList","images","map","image","src","alt","id","ImageBoard","counter","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAmCeA,E,kDAhCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAa,GACbC,IAAK,IAEP,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,+CAUnB,SAAYE,GACVC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGpD,SAAaL,GACXA,EAAMM,iBACNL,KAAKR,MAAMc,SAASN,KAAKP,OACzBO,KAAKC,SAAS,CAACP,YAAa,GAAIC,IAAK,O,oBAIvC,WACE,OACE,uBAAMY,SAAUP,KAAKF,aAArB,UACE,uBAAOU,KAAK,MAAML,KAAK,MAAMC,MAAOJ,KAAKP,MAAME,IAAKc,SAAUT,KAAKJ,YAAac,YAAY,cAC5F,uBAAOF,KAAK,OAAOL,KAAK,cAAcC,MAAOJ,KAAKP,MAAMC,YAAae,SAAUT,KAAKJ,YAAac,YAAY,kBAC7G,wBAAQF,KAAK,SAAb,8B,GA3BgBG,aCcTC,MAdf,SAAmBpB,GAEjB,IAAMqB,EAASrB,EAAMqB,OAAOC,KAAI,SAACC,GAAD,OAC9B,+BACE,qBAAKC,IAAKD,EAAMpB,IAAKsB,IAAKF,EAAMrB,cAChC,4BAAIqB,EAAMrB,gBAFHqB,EAAMG,OAMjB,OACE,6BAAKL,KCqCMM,E,kDA3Cb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXoB,OAAQ,GACRO,QAAS,GAGX,EAAKd,SAAW,EAAKA,SAAST,KAAd,gBAPC,E,qDAUnB,WAYEG,KAAKC,SAAS,CAAEY,OAXD,CACb,CAAEK,GAAI,EACJvB,IAAK,yFACLD,YAAa,WAEf,CAAEwB,GAAI,EACJvB,IAAK,sGACLD,YAAa,gB,sBAOnB,SAASqB,GACPA,EAAMG,GAAKlB,KAAKP,MAAM2B,QACtB,IAAMP,EAAM,YAAQb,KAAKP,MAAMoB,QAC/BA,EAAOQ,KAAKN,GAEZf,KAAKC,UAAS,SAACR,GAAD,MAAY,CAAEoB,SAAQO,QAAS3B,EAAM2B,QAAU,Q,oBAG/D,WACE,OACE,qCACE,cAAC,EAAD,CAAWd,SAAUN,KAAKM,WAC1B,cAAC,EAAD,CAAWO,OAAQb,KAAKP,MAAMoB,gB,GAtCbF,aCOVW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ca0dd078.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass ImageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      url: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value }); // will work for both inputs because we called name in the key\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); //keeps page from reloading on button press\n    this.props.addImage(this.state); // calls add image when event is fired\n    this.setState({description: '', url: ''}); //resets the keys to empty strings\n  }\n\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"url\" name=\"url\" value={this.state.url} onChange={this.handleInput} placeholder=\"Image URL\"/>\n        <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleInput} placeholder=\"Image Caption\"/>\n        <button type=\"submit\">Add Image</button>\n      </form>\n    )\n  }\n};\n\nexport default ImageForm\n","import { Component } from 'react';\n\nfunction ImageList(props) {\n\n  const images = props.images.map((image) => (\n    <li key={image.id}>\n      <img src={image.url} alt={image.description}/>\n      <p>{image.description}</p>\n    </li>\n  ));\n\n  return(\n    <ul>{images}</ul>\n  )\n}\n\nexport default ImageList\n","import { Component } from 'react';\nimport './App.css';\nimport ImageForm from './ImageForm'\nimport ImageList from './ImageList'\n\nclass ImageBoard extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      counter: 3,\n    }\n\n    this.addImage = this.addImage.bind(this);\n  }\n\n  componentDidMount() {\n    const images = [\n      { id: 1,\n        url: 'https://am21.mediaite.com/tms/cnt/uploads/2019/04/Heroes-in-crisis-reveal-is-harsh.jpg',\n        description: 'Image 1'\n      },\n      { id: 2,\n        url: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQCwAa50X_T2lzpZ4HktTHWt7qW7hU1Aj3bqw&usqp=CAU',\n        description: 'Image 2'\n      }\n    ];\n\n    this.setState({ images });\n  }\n\n  addImage(image) {\n    image.id = this.state.counter;\n    const images = [ ...this.state.images ]; // creates a shallow copy of images\n    images.push(image); // pushes new image into images array\n    // this.setState({ images });\n    this.setState((state) => ({ images, counter: state.counter + 1 })); // re-render to update images and the counter\n  }\n\n  render() {\n    return(\n      <>\n        <ImageForm addImage={this.addImage}/>\n        <ImageList images={this.state.images} />\n      </>\n    )\n  }\n}\n\nexport default ImageBoard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ImageBoard from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImageBoard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}